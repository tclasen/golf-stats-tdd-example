[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool]

[tool.black]
line-length = 88

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if 0:",
  "if False:"]
fail_under = 100
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
concurrency = ["multiprocessing"]
parallel = true
source = ["src"]

[tool.flake8]
exclude = [".git", ".venv", "__pycache__", "build", "dist"]
ignore = "D104"
max-complexity = 10
max_line_length = 88
per-file-ignores = ["tests/*.py: S101 D100"]
strictness = "full"

[tool.isort]
atomic = true
force_single_line = true
include_trailing_comma = true
line_length = 88
profile = "black"

[tool.mypy]
exclude = ".venv"
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict = true

[tool.poetry]
authors = ["Tory Clasen <ToryClasen@gmail.com>"]
description = ""
name = "example"
version = "0.1.0"

[tool.poetry.dependencies]
fastapi = "^0.78.0"
python = "^3.9.2"
uvicorn = {extras = ["standard"], version = "^0.18.1"}

[tool.poetry.dev-dependencies]
autoflake = "^1.4"
black = "^22.3.0"
commitizen = "^2.27.1"
coverage = {extras = ["toml"], version = "^6.4.1"}
dlint = "^0.12.0"
flake8 = "^4.0.1"
flake8-bandit = "^3.0.0"
flake8-bugbear = "^22.4.25"
isort = "^5.10.1"
mypy = "^0.961"
pre-commit = "^2.19.0"
pyproject-flake8 = "^0.0.1-alpha.4"
pytest = "^7.1.2"
pytest-clarity = "^1.0.1"
pytest-cov = "^3.0.0"
pytest-watch = "^4.2.0"
pytest-xdist = "^2.5.0"
python-semantic-release = "^7.29.1"
safety = "^1.10.3"
schemathesis = "^3.15.6"
toml-sort = "^0.20.0"
vulture = "^2.4"

[tool.pytest.ini_options]
addopts = "--no-header -p no:warnings -ra -q"
norecursedirs = [".*", "*.egg", "build", "dist"]
testpaths = ["tests/"]

[tool.semantic_release]
branch = "main"
build_command = "poetry build -n"
commit_subject = "bump: release {version}"
major_on_zero = false
pre_commit_command = "poetry run pre-commit run --all-files"
tag_commit = false
upload_to_PyPI = false
upload_to_release = false
version_source = "commit"
version_toml = ['pyproject.toml:tool.poetry.version']

[tool.tomlsort]
all = true
ignore_case = true
in_place = true

[tool.vulture]
min_confidence = 80
paths = ["src", "tests"]
sort_by_size = true
verbose = true
